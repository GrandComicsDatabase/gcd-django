# -*- coding: utf-8 -*-
from datetime import date
from django.urls import path, re_path
from django.views.generic import base as bv
from haystack.forms import FacetedSearchForm
from haystack.views import search_view_factory
from apps.gcd.views.search_haystack import PaginatedFacetedSearchView, \
     GcdSearchQuerySet

from apps.gcd import views as gcd_views

urlpatterns = [
    ###########################################################################
    # GCD URLs.
    #
    # General forms, where <entity> is publisher, series or issue and
    # <credit> is writer, penciller, etc.:
    #   gcd/<entity>/<id>/ shows details for the given entity.
    #   gcd/<entity>/name/<name> searches for entities by name.
    #   gcd/<credit>/name/<name> searches for stories by the named credit.
    #
    # In many cases a suffix of /sort/<sort type>/ is an optional extension.
    # In such cases, the form specifying the sort type must be listed first
    # or else it will never be used because the shorter form will always match.
    ###########################################################################

    path('', gcd_views.index, name='home'),
    path('search/', gcd_views.search.search, name='basic_search'),
    path('search/advanced/', gcd_views.search.advanced_search,
         name='advanced_search'),
    path('search/advanced/process/csv/', gcd_views.search.process_advanced,
         {'export_csv': True}, name='process_advanced_search_csv'),
    path('search/advanced/process/', gcd_views.search.process_advanced,
         name='process_advanced_search'),
    path('search/name/',
         gcd_views.search.name_search_hx, name='name_search_hx'),

    re_path(r'^(?P<model_name>\w+)/(?P<id>\d+)/history/$',
            gcd_views.details.change_history, name='change_history'),

    # Publisher
    path('publisher/<int:publisher_id>/',
         gcd_views.details.publisher, name='show_publisher'),
    path('publisher/name/<path:publisher_name>/sort/<path:sort>/',
         gcd_views.search.publisher_by_name, name='publisher_by_name'),
    path('publisher/name/<path:publisher_name>/',
         gcd_views.search.publisher_by_name, name='publisher_by_name'),
    path('publisher/search/',
         gcd_views.search.publisher_search_hx,
         name='publisher_search_hx'),
    path('publisher/<int:publisher_id>/indicia_publishers/',
         gcd_views.details.indicia_publishers),
    path('publisher/<int:publisher_id>/brands/',
         gcd_views.details.brands),
    path('publisher/<int:publisher_id>/brand_uses/',
         gcd_views.details.brand_uses),
    path('publisher/<int:publisher_id>/issues/',
         gcd_views.details.show_publisher_issues),
    path('publisher/<int:publisher_id>/current_series/',
         gcd_views.details.show_publisher_current_series),
    path('publisher/<int:publisher_id>/monthly_covers_on_sale/',
         gcd_views.details.publisher_monthly_covers,
         {'use_on_sale': True}, name='publisher_monthly_covers_on_sale'),
    re_path(r'^publisher/(?P<publisher_id>\d+)/monthly_covers_on_sale/year/(?P<year>\d{4})/month/(?P<month>\d{1,2})/$',
            gcd_views.details.publisher_monthly_covers,
            {'use_on_sale': True}, name='publisher_monthly_covers_on_sale'),
    path('publisher/<int:publisher_id>/monthly_covers_pub_date/',
         gcd_views.details.publisher_monthly_covers,
         {'use_on_sale': False}, name='publisher_monthly_covers_pub_date'),
    re_path(r'^publisher/(?P<publisher_id>\d+)/monthly_covers_pub_date/year/(?P<year>\d{4})/month/(?P<month>\d{1,2})/$',
            gcd_views.details.publisher_monthly_covers,
            {'use_on_sale': False}, name='publisher_monthly_covers_pub_date'),
    path('publisher/<int:publisher_id>/monthly_issues_on_sale/',
         gcd_views.details.publisher_monthly_covers,
         {'use_on_sale': True, 'overview': True},
         name='publisher_monthly_issues_on_sale'),
    re_path(r'^publisher/(?P<publisher_id>\d+)/monthly_issues_on_sale/year/(?P<year>\d{4})/month/(?P<month>\d{1,2})/$',
            gcd_views.details.publisher_monthly_covers,
            {'use_on_sale': True, 'overview': True},
            name='publisher_monthly_issues_on_sale'),
    path('publisher/<int:publisher_id>/monthly_issues_pub_date/',
         gcd_views.details.publisher_monthly_covers,
         {'use_on_sale': False, 'overview': True},
         name='publisher_monthly_issues_pub_date'),
    re_path(r'^publisher/(?P<publisher_id>\d+)/monthly_issues_pub_date/year/(?P<year>\d{4})/month/(?P<month>\d{1,2})/$',
            gcd_views.details.publisher_monthly_covers,
            {'use_on_sale': False, 'overview': True},
            name='publisher_monthly_issues_pub_date'),
    path('publisher/<int:publisher_id>/creator/<int:creator_id>/issues/',
         gcd_views.details.creator_issues, name='publisher_creator_issues'),
    path('publisher/<int:publisher_id>/creator_name/<int:creator_name_id>/issues/',
         gcd_views.details.creator_name_issues,
         name='publisher_creator_name_issues'),
    path('publisher/<int:publisher_id>/creators/',
         gcd_views.details.publisher_creators, name='publisher_creators'),
    path('publisher/<int:publisher_id>/creator_names/',
         gcd_views.details.publisher_creators, {'creator_names': True},
         name='publisher_creator_names'),
    path('publisher/name/',
         gcd_views.search.publisher_by_name, name='publisher_by_name'),

    path('brand_group/<int:brand_group_id>/',
         gcd_views.details.brand_group, name='show_brand_group'),
    path('brand_group/name/<path:brand_group_name>/sort/<path:sort>/',
         gcd_views.search.brand_group_by_name,
         name='brand_group_by_name'),
    path('brand_group/name/<path:brand_group_name>/',
         gcd_views.search.brand_group_by_name,
         name='brand_group_by_name'),
    path('brand_group/name/',
         gcd_views.search.brand_group_by_name, name='brand_group_by_name'),

    path('brand/<int:brand_id>/',
         gcd_views.details.brand, name='show_brand'),
    path('brand/name/<path:brand_name>/sort/<path:sort>/',
         gcd_views.search.brand_by_name, name='brand_by_name'),
    path('brand/name/<path:brand_name>/',
         gcd_views.search.brand_by_name, name='brand_by_name'),
    path('brand/name/',
         gcd_views.search.brand_by_name, name='brand_by_name'),

    path('brand_emblem/<int:brand_id>/',
         gcd_views.details.brand, name='show_brand'),
    path('brand_emblem/name/<path:brand_name>/sort/<path:sort>/',
         gcd_views.search.brand_by_name, name='brand_by_name'),
    path('brand_emblem/name/<path:brand_name>/',
         gcd_views.search.brand_by_name, name='brand_by_name'),
    path('brand_emblem/name/',
         gcd_views.search.brand_by_name, name='brand_by_name'),

    path('indicia_publisher/<int:indicia_publisher_id>/',
         gcd_views.details.indicia_publisher, name='show_indicia_publisher'),
    path('indicia_publisher/name/<path:ind_pub_name>/sort/<path:sort>/',
         gcd_views.search.indicia_publisher_by_name,
         name='indicia_publisher_by_name'),
    path('indicia_publisher/name/<path:ind_pub_name>/',
         gcd_views.search.indicia_publisher_by_name,
         name='indicia_publisher_by_name'),
    path('indicia_publisher/name/',
         gcd_views.search.indicia_publisher_by_name,
         name='indicia_publisher_by_name'),

    # Printer
    path('printer/<int:printer_id>/',
         gcd_views.details.printer, name='show_printer'),
    path('printer/<int:printer_id>/issues/',
         gcd_views.details.printer_issues, name='printer_issues'),
    path('printer/search/',
         gcd_views.search.printer_search_hx, name='printer_search_hx'),
    path('indicia_printer/<int:indicia_printer_id>/',
         gcd_views.details.indicia_printer, name='show_indicia_printer'),
    path('indicia_printer/<int:indicia_printer_id>/issues/',
         gcd_views.details.indicia_printer_issues,
         name='indicia_printer_issues'),

    path('award/<int:award_id>/',
         gcd_views.details.award, name='show_award'),
    path('award/name/<path:award_name>/sort/<path:sort>/',
         gcd_views.search.award_by_name, name='award_by_name'),
    path('award/name/<path:award_name>/',
         gcd_views.search.award_by_name, name='award_by_name'),

    path('school/<int:school_id>/',
         gcd_views.details.school, name='show_school'),

    path('creator/<int:creator_id>/',
         gcd_views.details.creator, name='show_creator'),
    path('creator/name/<path:creator_name>/sort/<path:sort>/',
         gcd_views.search.creator_by_name, name='creator_by_name'),
    path('creator/search/',
         gcd_views.search.creator_search_hx, name='creator_search_hx'),
    path('creator/<int:creator_id>/sequences/',
         gcd_views.details.creator_sequences, name='creator_sequences'),
    path('creator/<int:creator_id>/series/',
         gcd_views.details.creator_series, name='creator_series'),
    path('creator/<int:creator_id>/characters/',
         gcd_views.details.creator_characters, name='creator_characters'),
    path('creator/<int:creator_id>/creators/',
         gcd_views.details.creator_creators, name='creator_creators'),
    path('creator/<int:creator_id>/creator/<int:co_creator_id>/issues/',
         gcd_views.details.checklist_by_id, name='creator_cocreator_issues'),
    path('creator/<int:creator_id>/features/',
         gcd_views.details.creator_features, name='creator_features'),
    path('creator/<int:creator_id>/series/<int:series_id>/issues/',
         gcd_views.details.creator_issues, name='creator_series_issues'),
    path('creator/<int:creator_id>/edited_issues/',
         gcd_views.details.creator_edited_issues, name='creator_edited_issues'),
    path('creator/<int:creator_id>/series/<int:series_id>/sequences/',
         gcd_views.details.creator_sequences, name='creator_series_sequences'),
    path('creator/<int:creator_id>/character/<int:character_id>/issues/',
         gcd_views.details.checklist_by_id, name='creator_character_issues'),
    path('creator/<int:creator_id>/feature/<int:feature_id>/issues/',
         gcd_views.details.checklist_by_id, name='creator_feature_issues'),
    path('creator/<int:creator_id>/overview/',
         gcd_views.details.creator_overview, name='creator_overview'),
    path('creator/name/<path:creator_name>/',
         gcd_views.search.creator_by_name,
         name='creator_by_name'),
    path('creator_name/<int:creator_id>/sequences/',
         gcd_views.details.creator_sequences, {'creator_name': True},
         name='creator_name_sequences'),
    path('creator_name/<int:creator_name_id>/series/<int:series_id>/issues/',
         gcd_views.details.creator_sequences, {'creator_name': True},
         name='creator_name_issues'),
    path('creator/name/',
         gcd_views.search.creator_by_name,
         name='creator_by_name'),

    path('creator_membership/<int:creator_membership_id>/',
      gcd_views.details.creator_membership, name='show_creator_membership'),
    path('creator_membership/name/<path:creator_membership_name>/sort/<path:sort>/',
      gcd_views.search.creator_membership_by_name,
      name='creator_membership_by_name'),
    path('creator_membership/name/<path:creator_membership_name>/',
      gcd_views.search.creator_membership_by_name,
      name='creator_membership_by_name'),

    path('received_award/<int:received_award_id>/',
      gcd_views.details.received_award, name='show_received_award'),
    path('received_award/name/<path:received_award_name>/sort/<path:sort>/',
      gcd_views.search.received_award_by_name,
      name='received_award_by_name'),
    path('received_award/name/<path:received_award_name>/',
      gcd_views.search.received_award_by_name,
      name='received_award_by_name'),

    path('creator_art_influence/<int:creator_art_influence_id>/',
      gcd_views.details.creator_art_influence, name='show_creator_art_influence'),
    path('creator_art_influence/name/<path:creator_art_influence_name>/sort/<path:sort>/',
      gcd_views.search.creator_art_influence_by_name,
      name='creator_art_influence_by_name'),
    path('creator_art_influence/name/<path:creator_art_influence_name>/',
      gcd_views.search.creator_art_influence_by_name,
      name='creator_art_influence_by_name'),

    path('creator_non_comic_work/<int:creator_non_comic_work_id>/',
      gcd_views.details.creator_non_comic_work, name='show_creator_non_comic_work'),
    path('creator_non_comic_work/name/<path:creator_non_comic_work_name>/sort/<path:sort>/',
      gcd_views.search.creator_non_comic_work_by_name,
      name='creator_non_comic_work_by_name'),
    path('creator_non_comic_work/name/<path:creator_non_comic_work_name>/',
      gcd_views.search.creator_non_comic_work_by_name,
      name='creator_non_comic_work_by_name'),

    path('creator_relation/<int:creator_relation_id>/',
      gcd_views.details.creator_relation, name='show_creator_relation'),

    path('creator_school/<int:creator_school_id>/',
      gcd_views.details.creator_school, name='show_creator_school'),
    path('creator_degree/<int:creator_degree_id>/',
      gcd_views.details.creator_degree, name='show_creator_degree'),

    path('creator_signature/<int:creator_signature_id>/',
      gcd_views.details.creator_signature, name='show_creator_signature'),
    path('creator_signature/<int:creator_id>/sequences/',
        gcd_views.details.creator_sequences, {'signature': True},
        name='creator_signature_sequences'),

    path('imprint/<int:imprint_id>/', gcd_views.details.imprint,
      name='show_imprint'),

    # Series
    path('series/<int:series_id>/',
      gcd_views.details.series, name='show_series'),
    path('series/name/<path:series_name>/sort/<path:sort>/',
      gcd_views.search.series_by_name, name='series_by_name'),
    path('series/<int:series_id>/creator/<int:creator_id>/issues/',
      gcd_views.details.creator_issues, name='series_creator_issues'),
    path('series/<int:series_id>/creator_name/<int:creator_name_id>/issues/',
      gcd_views.details.creator_name_issues, name='series_creator_name_issues'),
    path('series/<int:series_id>/details/',
      gcd_views.details.series_details,
      name='series_details'),
    path('series/<int:series_id>/details/timeline/',
      gcd_views.details.series_details,
      {'by_date': True},
      name='series_timeline'),
    path('series/<int:series_id>/details/creators/',
      gcd_views.details.series_creators, name='series_creators'),
    path('series/<int:series_id>/details/creator_names/',
      gcd_views.details.series_creators, {'creator_names': True},
      name='series_creator_names'),
    path('series/<int:series_id>/characters/',
      gcd_views.details.series_characters, name='series_characters'),
    path('series/<int:series_id>/issues_to_migrate/',
      gcd_views.details.series_issues_to_migrate,
      name='series_migrate'),
    path('series/name/',
     gcd_views.search.series_by_name, name='series_by_name'),

    # Series and Issue
    path('series/name/<path:series_name>/issue/<path:issue_nr>/',
      gcd_views.search.series_and_issue),
    path('series/name/<path:series_name>/',
      gcd_views.search.series_by_name, name='series_by_name'),
    path('series/search/',
      gcd_views.search.series_search_hx,
      name='series_search_hx'),

    # Series index and cover status / gallery
    path('series/<int:series_id>/status/',
      gcd_views.details.status, name='series_status'),

    path('series/<int:series_id>/covers/',
      gcd_views.details.covers, name='series_covers'),
    path('series/<int:series_id>/overview/',
      gcd_views.details.series_overview, name='series_overview'),

    path('series/<int:series_id>/scans/',
      gcd_views.details.scans, name='series_scan_table'),

    # Issue
    path('issue/<int:issue_id>/modal/',
      gcd_views.details.show_issue_modal, name='show_issue_modal'),
    path('issue/<int:issue_id>/',
      gcd_views.details.issue, name='show_issue'),
    path('issue/', gcd_views.details.issue_form, name='issue_select_form'),
    # ISBNs don't have 'name' in the path, but otherwise work the same
    path('isbn/name/<path:isbn>/sort/<path:sort>/',
      gcd_views.search.issue_by_isbn_name),
    path('isbn/name/<path:isbn>/',
      gcd_views.search.issue_by_isbn_name),
    path('isbn/search/',
      gcd_views.search.issue_by_isbn_hx),
    path('isbn/<path:isbn>/sort/<path:sort>/',
      gcd_views.search.issue_by_isbn, name='issue_by_isbn'),
    path('isbn/<path:isbn>/',
      gcd_views.search.issue_by_isbn, name='issue_by_isbn'),
    # barcodes don't have 'name' in the path, but otherwise work the same
    path('barcode/name/<path:barcode>/sort/<path:sort>/',
      gcd_views.search.issue_by_barcode_name),
    path('barcode/name/<path:barcode>/',
      gcd_views.search.issue_by_barcode_name),
    path('barcode/search/',
      gcd_views.search.issue_by_barcode_hx),
    path('barcode/<path:barcode>/sort/<path:sort>/',
      gcd_views.search.issue_by_barcode, name='issue_by_barcode'),
    path('barcode/<path:barcode>/',
      gcd_views.search.issue_by_barcode, name='issue_by_barcode'),

    # Single Cover
    path('issue/<int:issue_id>/cover/<int:size>/',
      gcd_views.details.cover, name='issue_cover_view'),

    # Images for Issue
    path('issue/<int:issue_id>/image/',
      gcd_views.details.issue_images, name='issue_images'),

    # Credits
    path('credit/<int:credit_id>/source/',
      gcd_views.details.credit_source, name='credit_source'),
    # Stories
    path('story/<int:story_id>/<path:credit_type>/history/',
      gcd_views.details.credit_type_history, name='credit_type_history'),
    path('story/<int:story_id>/modal/',
      gcd_views.details.show_story_modal, name='show_story_modal'),

    # Feature
    path('feature/<int:feature_id>/issues/',
      gcd_views.details.feature_issuelist_by_id, name='feature_issuelist_by_id'),
    path('feature/<int:feature_id>/overview/',
      gcd_views.details.feature_overview, name='feature_overview'),
    path('feature/<int:feature_id>/creator/<int:creator_id>/issues/',
      gcd_views.details.creator_issues, name='feature_creator_issues'),
    path('feature/<int:feature_id>/creator_name/<int:creator_name_id>/issues/',
      gcd_views.details.creator_name_issues, name='feature_creator_name_issues'),
    path('feature/<int:feature_id>/creators/',
      gcd_views.details.feature_creators, name='feature_creators'),
    path('feature/<int:feature_id>/creator_names/',
      gcd_views.details.feature_creators, {'creator_names': True},
      name='feature_creator_names'),
    path('feature/<int:feature_id>/sequences/',
      gcd_views.details.feature_sequences, name='feature_sequences'),
    path('feature/<int:feature_id>/covers/',
      gcd_views.details.feature_covers, name='feature_covers'),
    path('feature/<int:feature_id>/',
      gcd_views.details.feature, name='show_feature'),
    path('feature_logo/<int:feature_logo_id>/issues/',
      gcd_views.details.feature_logo_issuelist_by_id, name='feature_logo_issuelist_by_id'),
    path('feature_logo/<int:feature_logo_id>/sequences/',
      gcd_views.details.feature_logo_sequences, name='feature_logo_sequences'),
    path('feature_logo/<int:feature_logo_id>/',
      gcd_views.details.feature_logo, name='show_feature_logo'),
    path('feature_relation/<int:feature_relation_id>/',
      gcd_views.details.feature_relation, name='show_feature_relation'),

    path('multiverse/<int:multiverse_id>/',
      gcd_views.details.multiverse, name='show_multiverse'),
    path('universe/<int:universe_id>/',
      gcd_views.details.universe, name='show_universe'),
    path('universe/<int:universe_id>/sequences/',
      gcd_views.details.universe_sequences, name='universe_sequences'),
    path('universe/<int:universe_id>/issues/',
      gcd_views.details.universe_issues, name='universe_issues'),
    path('universe/<int:universe_id>/characters/',
      gcd_views.details.universe_characters, name='universe_characters'),
    # Character
    path('character/search/',
      gcd_views.search.character_search_hx,
      name='character_search_hx'),
    path('character_name/<int:character_name_id>/issues/',
      gcd_views.details.character_name_issues, name='character_name_issues'),
    re_path(r'^character_name/(?P<character_name_id>\d+)/issues/universe/(?P<universe_id>-?\d+)/$',
      gcd_views.details.character_name_issues, name='character_name_issues_per_universe'),
    path('character/<int:character_id>/issues/',
      gcd_views.details.character_issues, name='character_issues'),
    re_path(r'^character/(?P<character_id>\d+)/issues/character_universe/(?P<universe_id>-?\d+)/$',
      gcd_views.details.character_issues, name='character_issues_per_universe'),
    re_path(r'^character/(?P<character_id>\d+)/issues/character_universe/(?P<universe_id>-?\d+)/story_universe/(?P<story_universe_id>-?\d+)/$',
      gcd_views.details.character_issues, name='character_story_issues_per_universe'),
    re_path(r'^character/(?P<character_id>\d+)/issues/story_universe/(?P<story_universe_id>-?\d+)/$',
      gcd_views.details.character_issues, name='character_story_issues_per_universe'),
    path('character/<int:character_id>/issues/layer/up/',
      gcd_views.details.character_issues, {'layer': 1}, name='character_issues_up'),
    path('character/<int:character_id>/issues/layer/down/',
      gcd_views.details.character_issues, {'layer': -1}, name='character_issues_down'),
    re_path(r'^character/(?P<character_id>\d+)/issues/series/(?P<series_id>-?\d+)/$',
      gcd_views.details.character_issues_series, name='character_issues_per_series'),
    path('character/<int:character_id>/series/',
      gcd_views.details.character_series, name='character_series'),
    path('character/<int:character_id>/creators/',
      gcd_views.details.character_creators, name='character_creators'),
    path('character/<int:character_id>/creator_names/',
      gcd_views.details.character_creators, {'creator_names': True}, name='character_creator_names'),
    path('character/<int:character_id>/creator/<int:creator_id>/issues/',
      gcd_views.details.creator_issues, name='character_creator_issues'),
    path('character/<int:character_id>/creator_name/<int:creator_name_id>/issues/',
      gcd_views.details.creator_name_issues, name='character_creator_name_issues'),
    path('character/<int:character_id>/sequences/',
      gcd_views.details.character_sequences, name='character_sequences'),
    path('character/<int:character_id>/covers/',
      gcd_views.details.character_covers, name='character_covers'),
    path('character/<int:character_id>/',
      gcd_views.details.character, name='show_character'),
    path('character_relation/<int:character_relation_id>/',
      gcd_views.details.character_relation, name='show_character_relation'),
    path('group/search/',
      gcd_views.search.group_search_hx,
      name='group_search_hx'),
    path('group_name/<int:group_name_id>/issues/',
      gcd_views.details.group_name_issues, name='group_name_issues'),
    re_path(r'^group_name/(?P<group_name_id>\d+)/issues/universe/(?P<universe_id>-?\d+)/$',
      gcd_views.details.group_name_issues, name='group_name_issues_per_universe'),
    path('group/<int:group_id>/issues/',
      gcd_views.details.group_issues, name='group_issues'),
    re_path(r'^group/(?P<group_id>\d+)/issues/group_universe/(?P<universe_id>-?\d+)/$',
      gcd_views.details.group_issues, name='group_issues_per_universe'),
    re_path(r'^group/(?P<group_id>\d+)/issues/group_universe/(?P<universe_id>-?\d+)/story_universe/(?P<story_universe_id>-?\d+)/$',
      gcd_views.details.group_issues, name='group_story_issues_per_universe'),
    re_path(r'^group/(?P<group_id>\d+)/issues/story_universe/(?P<story_universe_id>-?\d+)/$',
      gcd_views.details.group_issues, name='group_story_issues_per_universe'),
    path('group/<int:group_id>/creator/<int:creator_id>/issues/',
      gcd_views.details.creator_issues, name='group_creator_issues'),
    path('group/<int:group_id>/creator_name/<int:creator_name_id>/issues/',
      gcd_views.details.creator_name_issues, name='group_creator_name_issues'),
    path('group/<int:group_id>/creators/',
      gcd_views.details.group_creators, name='group_creators'),
    path('group/<int:group_id>/creator_names/',
      gcd_views.details.group_creators, {'creator_names': True}, name='group_creator_names'),
    path('group/<int:group_id>/sequences/',
      gcd_views.details.group_sequences, name='group_sequences'),
    path('group/<int:group_id>/',
      gcd_views.details.group, name='show_group'),
    path('group_relation/<int:group_relation_id>/',
      gcd_views.details.group_relation, name='show_group_relation'),
    path('group_membership/<int:group_membership_id>/',
      gcd_views.details.group_membership, name='show_group_membership'),

    # Keywords
    path('keyword/<path:keyword>/<path:model_name>/',
      gcd_views.details.keyword, name='show_keyword'),
    path('keyword/<path:keyword>/',
      gcd_views.details.keyword, name='show_keyword'),

    # Attribute searches
    path('character/name/<path:character_name>/sort/<path:sort>/',
      gcd_views.search.character_by_name, name='character_by_name'),
    path('character/name/<path:character_name>/',
      gcd_views.search.character_by_name, name='character_by_name'),

    path('writer/name/<path:writer>/sort/<path:sort>/',
      gcd_views.search.writer_by_name, name='writer_by_name'),
    path('writer/name/<path:writer>/',
      gcd_views.search.writer_by_name, name='writer_by_name'),

    path('penciller/name/<path:penciller>/sort/<path:sort>/',
      gcd_views.search.penciller_by_name, name='penciller_by_name'),
    path('penciller/name/<path:penciller>/',
      gcd_views.search.penciller_by_name, name='penciller_by_name'),

    path('inker/name/<path:inker>/sort/<path:sort>/',
      gcd_views.search.inker_by_name, name='inker_by_name'),
    path('inker/name/<path:inker>/',
      gcd_views.search.inker_by_name, name='inker_by_name'),

    path('colorist/name/<path:colorist>/sort/<path:sort>/',
      gcd_views.search.colorist_by_name, name='colorist_by_name'),
    path('colorist/name/<path:colorist>/',
      gcd_views.search.colorist_by_name, name='colorist_by_name'),

    path('letterer/name/<path:letterer>/sort/<path:sort>/',
      gcd_views.search.letterer_by_name, name='letterer_by_name'),
    path('letterer/name/<path:letterer>/',
      gcd_views.search.letterer_by_name, name='letterer_by_name'),

    path('editor/name/<path:editor>/sort/<path:sort>/',
      gcd_views.search.editor_by_name, name='editor_by_name'),
    path('editor/name/<path:editor>/',
      gcd_views.search.editor_by_name, name='editor_by_name'),

    path('story/name/<path:title>/sort/<path:sort>/',
      gcd_views.search.story_by_title, name='story_by_title'),
    path('story/name/<path:title>/',
      gcd_views.search.story_by_title, name='story_by_title'),

    path('feature/name/<path:feature>/sort/<path:sort>/',
      gcd_views.search.story_by_feature, name='story_by_feature'),
    path('feature/name/<path:feature>/',
      gcd_views.search.story_by_feature, name='story_by_feature'),

    path('credit/name/<path:name>/sort/<path:sort>/',
      gcd_views.search.story_by_credit, name='story_by_credit'),
    path('credit/name/<path:name>/',
      gcd_views.search.story_by_credit, name='story_by_credit'),

    # Special display pages
    path('checklist/name/<path:creator>/country/<path:country>/',
      gcd_views.details.checklist_by_name, name='checklist_by_name'),
    path('checklist/name/<path:creator>/language/<path:language>/',
      gcd_views.details.checklist_by_name, name='checklist_by_name'),
    path('checklist/name/<path:creator>/',
      gcd_views.details.checklist_by_name, name='checklist_by_name'),
    path('creator_migrate_checklist/name/<path:creator>/',
      gcd_views.details.checklist_by_name, {'to_be_migrated': True},
      name='creator_migrate_checklist'),
    path('checklist/<int:creator_name_id>/character/<int:character_id>/',
      gcd_views.details.creator_name_checklist, name='creator_name_checklist'),
    path('checklist/<int:creator_name_id>/group/<int:group_id>/',
      gcd_views.details.creator_name_checklist, name='creator_name_checklist'),
    path('checklist/<int:creator_name_id>/feature/<int:feature_id>/',
      gcd_views.details.creator_name_checklist, name='creator_name_checklist'),
    path('checklist/<int:creator_name_id>/series/<int:series_id>/',
      gcd_views.details.creator_name_checklist, name='creator_name_checklist'),
    path('checklist/<int:creator_id>/country/<path:country>/',
      gcd_views.details.checklist_by_id, name='checklist_by_id'),
    path('checklist/<int:creator_id>/language/<path:language>/',
      gcd_views.details.checklist_by_id, name='checklist_by_id'),
    path('checklist/<int:creator_id>/',
      gcd_views.details.checklist_by_id, name='checklist_by_id'),
    path('cover_checklist/<int:creator_id>/country/<path:country>/',
      gcd_views.details.cover_checklist_by_id, name='cover_checklist_by_id'),
    path('cover_checklist/<int:creator_id>/language/<path:language>/',
      gcd_views.details.cover_checklist_by_id, name='cover_checklist_by_id'),
    path('cover_checklist/<int:creator_id>/',
      gcd_views.details.cover_checklist_by_id, name='cover_checklist_by_id'),

    # Note that Jobs don't have 'name' in the path, but otherwise work the same.
    path('job_number/name/<path:number>/sort/<path:sort>/',
      gcd_views.search.story_by_job_number_name),
    path('job_number/name/<path:number>/',
      gcd_views.search.story_by_job_number_name),
    path('job_number/<path:number>/sort/<path:sort>/',
      gcd_views.search.story_by_job_number, name='story_by_job_number'),
    path('job_number/<path:number>/',
      gcd_views.search.story_by_job_number, name='story_by_job_number'),

    # show covers/changes from a particular date
    path('daily_covers/',
         gcd_views.details.daily_covers, name='covers_today'),
    path('daily_covers/<path:show_date>/',
         gcd_views.details.daily_covers, name='covers_by_date'),
    path('my_daily_covers/',
         gcd_views.details.daily_covers, {'user': True},
         name='my_covers_today'),
    path('my_daily_covers/<path:show_date>/',
         gcd_views.details.daily_covers, {'user': True},
         name='my_covers_by_date'),
    path('daily_changes/',
         gcd_views.details.daily_changes, name='changes_today'),
    path('daily_changes/<path:show_date>/',
         gcd_views.details.daily_changes, name='changes_by_date'),
    path('my_daily_changes/',
         gcd_views.details.daily_changes, {'user': True},
         name='my_changes_today'),
    path('my_daily_changes/<path:show_date>/',
         gcd_views.details.daily_changes, {'user': True},
         name='my_changes_by_date'),
    path('on_sale_weekly/',
         gcd_views.details.on_sale_weekly, name='on_sale_this_week'),
    path('on_sale_weekly/no_variant/',
         gcd_views.details.on_sale_weekly, {'variant': False},
         name='on_sale_this_week_no_variant'),
    re_path(r'^on_sale_weekly/(?P<year>\d{4})/week/(?P<week>\d{1,2})/$',
            gcd_views.details.on_sale_weekly, name='on_sale_weekly'),
    re_path(r'^on_sale_weekly/(?P<year>\d{4})/week/(?P<week>\d{1,2})/no_variant/$',
            gcd_views.details.on_sale_weekly, {'variant': False},
            name='on_sale_weekly_no_variant'),
    path('on_sale_monthly/',
         gcd_views.details.on_sale_monthly, name='on_sale_this_month'),
    path('on_sale_monthly/no_variant/',
         gcd_views.details.on_sale_monthly, {'variant': False},
         name='on_sale_this_month_no_variant'),
    re_path(r'^on_sale_monthly/(?P<year>\d{4})/month/(?P<month>\d{1,2})/$',
            gcd_views.details.on_sale_monthly, name='on_sale_monthly'),
    re_path(r'^on_sale_monthly/(?P<year>\d{4})/month/(?P<month>\d{1,2})/no_variant/$',
            gcd_views.details.on_sale_monthly, {'variant': False},
            name='on_sale_monthly_no_variant'),
    path('international_stats_language/',
         gcd_views.details.int_stats_language,
         name='international_stats_language'),
    path('international_stats_country/',
         gcd_views.details.int_stats_country,
         name='international_stats_country'),

    # list covers marked for replacement
    path('covers_to_replace/',
         gcd_views.details.covers_to_replace),
    path('covers_to_replace/with/<path:starts_with>/',
         gcd_views.details.covers_to_replace),

    # calendar
    path('calendar/',
         bv.TemplateView.as_view(template_name='gcd/status/calendar.html')),
    re_path(r'daily_creators/offset/(?P<offset>[-+]?\d{1,3})/$',
            gcd_views.details.daily_creators),
    path('daily_creators/', gcd_views.details.daily_creators,
         name='daily_creators'),

    # GCD comics history award
    path(
      'gcd_history_award/',
      bv.TemplateView.as_view(template_name='gcd/gcd_history_award.html'),
      name='gcd_history_award'),

    # redirects of old lasso pages
    re_path(r'^publisher_details.lasso/$', gcd_views.redirect.publisher),
    re_path(r'^series.lasso/$', gcd_views.redirect.series),
    re_path(r'^indexstatus.lasso/$', gcd_views.redirect.series_status),
    re_path(r'^scans.lasso/$', gcd_views.redirect.series_scans),
    re_path(r'^covers.lasso/$', gcd_views.redirect.series_covers),
    re_path(r'^details.lasso/$', gcd_views.redirect.issue),
    re_path(r'^coverview.lasso/$', gcd_views.redirect.issue_cover),
    re_path(r'^daily_covers.lasso/$', gcd_views.redirect.daily_covers),
    re_path(r'^search.lasso/$', gcd_views.redirect.search),
]

# haystack search
sqs = GcdSearchQuerySet().facet('facet_model_name').facet('country') \
                         .facet('language').facet('publisher')\
                         .facet('feature').facet('type')\
                         .date_facet('date', start_date=date(1000, 1, 1),
                                     end_date=date(3000, 1, 1), gap_by='year')

urlpatterns += [re_path(r'^searchNew/',
                search_view_factory(
                  view_class=PaginatedFacetedSearchView,
                  form_class=FacetedSearchForm, searchqueryset=sqs),
                name='haystack_search'),
                ]

urlpatterns += [
    path(
      'international_stats/',
      bv.RedirectView.as_view(url='/international_stats_language/',
                              permanent=True)),
    re_path('^covers_for_replacement.lasso/$',
            bv.RedirectView.as_view(url='/covers_to_replace/',
                                    permanent=True)),
    re_path('^index.lasso/$',
            bv.RedirectView.as_view(url='/', permanent=True)),
    re_path('^donate.lasso/$',
            bv.RedirectView.as_view(url='/donate/', permanent=True)),
    re_path(r'^graphics/covers/',
            bv.RedirectView.as_view(url=None, permanent=True)),
    re_path('^coversubmit/index.lasso/$',
            bv.RedirectView.as_view(url=None, permanent=True)),
    path('creator_checklist/name/<path:creator>/country/<path:country>/',
         bv.RedirectView.as_view(
          url='/checklist/name/%(creator)s/country/%(country)s/',
          permanent=True)),
    path('creator_checklist/name/<path:creator>/language/<path:language>/',
         bv.RedirectView.as_view(
          url='/checklist/name/%(creator)s/language/%(language)s/',
          permanent=True)),
    path('creator_checklist/name/<path:creator>/',
         bv.RedirectView.as_view(url='/checklist/name/%(creator)s/',
                                 permanent=True))
]
